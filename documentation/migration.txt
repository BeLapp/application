Migrationsanleitung von OPUS3 zu OPUS4
======================================

Dieses Dokument beschreibt die notwendigen Schritte, um den Datenbestand von OPUS3 zu OPUS4 zu migrieren.
Die Installation von OPUS4 ist hier nicht beschrieben.

Migrationsschritte
==================

Auf Opus3-Maschine
-> mysqldump erzeugen
-> Volltextdateien kopieren (wenn Opus4 auf einem anderen Rechner laufen soll)
-> (optional) Signaturdateien kopieren (wenn Opus4 auf einem anderen Rechner laufen soll)

Auf Opus4-Maschine (nach der Installation und Konfiguration von OPUS4)
-> Migrationsscript starten
-> Fehlermeldungen kontrollieren
-> Datenbestand kontrollieren
-> Suchmaschinenindex bauen

Migrationsschritte in Befehlen:
opus3# mysqldump --xml -u<User> -p<Passwort> <opus3-DB> > <ausgabedatei>
opus3# scp -r <opus3-Installationsverzeichnis>/htdocs/volltexte <opus4-host>:/tmp/opus3files
Falls es mehrere Volltextverzeichnisse gibt, muss jedes separat zum opus4-Host kopiert werden 
(und dort auch in separate Verzeichnisse!) 
opus3# scp -r <opus3-Installationsverzeichnis>/htdocs/signatures <opus4-host>:/tmp/opus3signatures

opus4# cd <opus4-installationsverzeichnis>/scripts
opus4# sh ./migration.sh
Das Script ist interaktiv und fragt Pfade etc. ab.
workspace/log/import.log prüfen und darin nach dem String ERROR suchen
Die nicht importierten Einträge sind als Opus_Model unter workspace/tmp/importerrors zu finden 
Sollte migration.sh mit einem Speicherüberlauf enden, muss der Import wiederholt (oder besser: ergänzt) werden.
Zur Ergänzung muss die XML-Dumpdatei manuell editiert werden. Im XML-Element <table_data name="opus">
müssen sämtliche bereits importierten Einträge entfernt werden. Anschliessend abspeichern und erneut
den Import starten, diesmal mit folgendem Kommando:
opus4# php Opus3Migration.php
Auch bei Fehlern muss eine Dumpdatei bereitgestellt werden, die die Einträge aus der opus-Tabelle enthält.
Bei erneuten Importdurchläufen müssen die Collections, Institute und Lizenzen nicht erneut importiert werden.

Ist der Datenbestand vollständig importiert, kann der Suchindex aufgebaut werden.
opus4# php SearchEngineIndexBuilder.php
Sollte SearchEngineIndexBuilder.php mit einem Speicherüberlauf enden, kann die Indizierung ab der letzten
ID fortgesetzt werden:
opus4# php SearchEngineIndexBuilder.php <ID>


Datenbankdump Opus3
===================

Der erste Schritt ist die Erstellung einer Dumpdatei der Datenbankinhalte aus Opus3. 
Die Importdatei muss mit mysqldump hergestellt werden.

    mysqldump --xml -u<User> -p<Passwort> <opus3-DB> > <ausgabedatei>

Das von mysqldump erzeugte XML-Format ist zwingend für den reibungslosen Ablauf der Migration erforderlich. 
Sollten Eingriffe an der Datenbankstruktur in Opus3 vorgenommen worden sein, werden diese generell nicht 
mit migriert.

Volltextdateien Opus3
=====================

Das Migrationsscript muss direkten Zugriff auf die Volltextdateien aus Opus3 haben, da ansonsten die 
Kopie und Registrierung der einzelnen Dateien nicht funktioniert. Dafür kann das Volltextverzeichnis, wenn 
es nicht auf dem gleichen Rechner liegt wie Opus4, per NFS eingebunden oder einfach komplett auf den 
Opus4-Rechner kopiert werden. Im Standard-Opus3 liegen die Volltexte im Verzeichnis htdocs/volltexte. 
Sollen Opus3 und Opus4 auf dem gleichen Rechner laufen, kann in der Regel das Originalverzeichnis genutzt 
werden. Empfohlen wird aber auf jeden Fall eine Sicherungskopie der Daten!

Signaturdateien aus Opus3
=========================

Sollte in Opus3 die Signaturerweiterung genutzt worden sein (mod_gpg), dann können die vorhandenen 
Signaturdateien automatisch in Opus4 migriert werden. Wie bei den Volltexten muss das Migrationsscript 
direkten Zugriff auf die Dateien haben; der Pfad muss bei der Migration angegeben werden.

Automatische Signaturermittlung
===============================

Sollte die Übernahme der alten Signaturen nicht erwünscht sein oder scheitern, gibt es die Möglichkeit, 
beim Import alle eingetragenen Dateien automatisch zu signieren. Dazu muss GPG installiert und in Opus 
eingebunden sein. Zudem muss das Passwort des Signierschlüssels dem Migrationsscript übergeben werden.

Migrationsscript
================

Nachdem die Vorbereitungen getroffen wurden, kann die eigentliche Migration von OPUS3 zu OPUS4 über die 
Kommandozeile ausgelöst werden. Das Script liegt im Verzeichnis scripts.

Benutzung des Scripts:

    php Opus3Migration.php [options] [<importfile>]

    Mögliche Optionen: 
    --without-metadata If omitted, the existing metadata in the database will be read 
    --without-licences If omitted no licenses will be imported 
    --without-institutes If omitted no institutes will be imported 
    --autosign=<Signature-Key-Password> Imported documents will be signed automatically 
    --with-signatures=<Path-to-signature-files> Import signatures from OPUS3 
    --with-files=<Path-to-files> The complete path to the fulltexts in your OPUS3 repository 
    --with-magic=<magic path> should be supplied when the import doesnt work properly

    <importfile> is the path to the file to import

Wird das Script ohne Parameter gestartet, setzt sich eine abfragebasierte Migration in Gang. 
Dies erfordert, dass auf dem Server readline installiert und in PHP aktiviert ist.

Sollte es zu Problemen beim Import der Dateien kommen, kann dies damit zusammenhängen, dass Magicfile 
nicht korrekt eingebunden oder gar nicht installiert ist. Wie man Magicfile unter verschiedenen 
Distributionen installiert ist bei http://de.php.net/manual/en/fileinfo.setup.php beschrieben. 
Der Pfad kann über man 5 magic herausgefunden werden.

Meldungen des Migrationsscripts
===============================

Das Migrationsscript meldet Probleme bei der Migration direkt auf die Kommandozeile oder in Logdateien. 
Auf der Kommandozeile wird z.B. gemeldet, wenn zu einem Dokument eine bestimmte Klassifikation nicht 
gefunden wurde. Opus4 bringt von Haus aus die in Opus3 genutzten Klassifikationssysteme mit, ergänzt 
durch einige weitere. Unterstützt werden:

    * CCS
    * MSC
    * PACS
    * DDC
    * APA
    * JEL
    * BK 

Sind die Klassen in Opus3 nicht korrekt eingetragen (Opus3 hatte hier keine Eingabekontrolle!), können 
Dokumente ggf. nicht der korrekten Klasse zugeordnet werden. Dies wird in einer Fehlermeldung weitergegeben: 
Klasse 20A57 in der MSC konnte nicht gefunden werden für alte Opus ID 111

Der Eintrag muss dann in Opus4 ggf. manuell korrigiert und der gewünschten Klasse zugeordnet werden.

Weitere typische Importfehler können bei den einzelnen Dokumenten auftreten. Sollte ein Dokumenttyp in Opus3
ergänzt worden sein, muss dieser auch erst in OPUS4 eingetragen werden, da das Dokument ansonsten nicht
importiert werden kann!

Zum Schluss des Importvorganges für die Metadaten der Dokumente wird ein Statusbericht angezeigt, wie 
viele Dokumente nicht importiert werden konnten und wo die Logdatei zu finden ist.

Suchmaschinenindex aufbauen
===========================

Der Suchmaschinenindex sollte erst dann aufgebaut werden, wenn der Datenbestand mit der Migration 
ordnungsgemäß aufgebaut wurde.

Der Suchmaschinenindex kann mit dem Script SearchEngineIndexBuilder.php aufgebaut werden. 
Ohne Parameter wird der gesamte Datenbestand aus der DB indiziert. Dabei kann es zu einem Speicherüberlauf 
kommen, der den Indizierungsvorgang beendet.
Das Script kann dann mit einem Parameter erneut gestartet werden. Der erste Parameter gibt die Start-ID an, 
ab der der Indizierungsvorgang begonnen werden soll. Mit einem zweiten Parameter kann auch beeinflusst 
werden, bis zu welcher ID die Indizierung laufen soll.
Um Speicherfehler zu vermeiden kann mittels eines dritten Parameters die Anzahl der Dokumente eingestellt 
werden, die im Speicher gehalten werden soll. Der Standardwert sind hier drei Dokumente. 
Das PHP-Memory Limit sollte bei Beibehaltung der drei Dokumente so hoch gesetzt werden, dass das größte zu 
indizierende Dokument drei mal im Speicher gehalten werden kann. Darauf sollten nochmal 10 MB für Zend 
gerechnet werden. Ist das grösste Dokument also 100 MB groß, sollte PHP 310 MB an Speicher zugesichert werden. 
Dies kann bei großen Dokumenten zu Problemen führen. Daher sollte, wenn sehr große Dokumente vorhanden sind, 
der dritte Parameter entsprechend niedrig eingestellt werden. Die Speichergröße kann dann entsprechend 
heruntergesetzt werden.





Migrationskonzept
=================

Dieser Abschnitt beschreibt den internen Ablauf der Migration. Sie müssen ihn nicht lesen, es sei denn,
Sie sind an der Realisation der Migration interessiert.
Die Migration erfolgt intern in verschiedenen Schritten. 
Zentrales Konzept ist, dass ein XML-Datenbank-Dump zur Verfügung steht, der die Struktur der Opus3-Datenbank 
abbildet. Dieser Dump wird mehrstufig mittels XSLT und PHP transformiert und die Ergebnisse in Opus4 
weiterverarbeitet.

Die internen Migrationsstufen sehen dabei etwa so aus:

-> XML-Dump 
-> Extraktion der Institutsstrukturen aus dem Dump 
-> Anlegen einer Collection in Opus4, die die Organisationsstruktur abbildet (PHP) 
-> Extraktion der Lizenztexte aus dem Dump 
-> Eintragen der Lizenztexte in Opus4 (PHP) 
-> Extraktion der Dokument-Metadaten aus dem Dump 
-> Bilden von Opus4-Modellen aus den Metadaten (XSLT) 
-> Abspeichern der XML-Modelldaten in der Datenbank (PHP) 
-> Kopie der Volltextdateien aus Opus3 in die Verzeichnisstruktur von Opus4 
-> Registrierung der Volltextdateien zu den Modellen in der Datenbank 
-> (optional) Einlesen der Signaturdateien (Dateisystem) aus Opus3 in die Modelldaten von Opus4 
-> (optional) Berechnung der Signaturen über alle importierten Dateien

Eine Migration von Opus3 zu Opus4 sollte ohne Aufwand für die Anwender zu erledigen sein. Damit es 
reibungslos funktioniert, müssen jedoch einige Vorbereitungen getroffen werden, bevor die Migration 
gestartet werden kann.
 