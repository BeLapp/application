<?xml version="1.0" encoding="UTF-8"?>
<project name="opus4server" default="build">

    <property environment="env" />
    <property name="workspace" value="${env.WORKSPACE}" />
    <property name="frameworkdir" location="${basedir}/../framework" />
    <property name="configfile" location="${workspace}/../opus-config.properties" />
    <property name="libsdir" location="/home/opus4ci/libs" />
    <property name="testpath" value="" />

    <target name="analyse-code" depends="php-codesniffer,phpmd,phpcpd,pdepend" />
    
    <target name="build" depends="clean,prepare,lint,php-documentor,phpunit,analyse-code"
            description="" />
    
    <target name="build-parallel">
        <!-- TODO -->            
    </target>

    <target name="build-fast" depends="clean,prepare,lint,phpunit-fast" description="" />

    <target name="clean">
        <delete dir="${basedir}/build/logs" />
        <delete dir="${basedir}/build/api" />
        <delete dir="${basedir}/build/coverage" />
        <delete dir="${basedir}/build/pdepend" />

        <delete>
            <fileset dir="${basedir}/workspace/cache" includes="*cache*-*" />
        </delete>
        <delete>
            <fileset dir="${basedir}/workspace/tmp" includes="old-*" />
        </delete>
        <delete> 
            <fileset dir="${basedir}/tests/workspace/cache" includes="*cache*-*" />
        </delete>

        <delete includeemptydirs="true" dir="${basedir}/workspace/tmp" />
    </target>
    
    <target name="setup" depends="prepare-dependencies,prepare-config" />

    <target name="prepare">
        <mkdir dir="${basedir}/build/logs" />
        <mkdir dir="${basedir}/build/coverage" />
        <mkdir dir="${basedir}/build/api" />
        <mkdir dir="${basedir}/build/pdepend" />
    </target>

    <target name="prepare-dependencies">
        <symlink link="${basedir}/db/schema" resource="${frameworkdir}/db/schema" failonerror="false" />
        <symlink link="${basedir}/library/Opus" resource="${frameworkdir}/library/Opus" failonerror="false" />
        <symlink link="${basedir}/library/Zend" resource="${libsdir}/ZendFramework/library/Zend" failonerror="false" />
        <symlink link="${basedir}/library/Apache" resource="${libsdir}/SolrPhpClient/Apache" failonerror="false" />
        <symlink link="${basedir}/library/jpgraph" resource="${libsdir}/jpgraph/src" failonerror="false" />
    </target>

    <target name="prepare-config" description="Prepares the configuration files">
        <!-- Prepare script for rebuilding database. -->
        <copy file="${basedir}/tests/rebuilding_database.sh.template"
              toFile="${basedir}/tests/rebuilding_database.sh" />
        <chmod file="${basedir}/tests/rebuilding_database.sh" perm="+x" />

        <!-- Prepare test configuration. -->
        <copy file="${basedir}/tests/config.ini.template" toFile="${basedir}/tests/config.ini" filtering="true">
            <filterset filtersFile="${configfile}" />
        </copy>

        <!-- Prepare main configuration. Needed for scripts like SolrIndexBuilder. -->
        <copy file="${basedir}/application/configs/config.ini.template"
              toFile="${basedir}/application/configs/config.ini" filtering="true">
            <filterset filtersFile="${configfile}" />
        </copy>
    </target>

    <target name="lint" description="Prüft, ob PHP Dateien Syntaxfehler enthalten.">
        <apply executable="php" dir="${basedir}" failonerror="on" logerror="on">
            <arg line="-l"/>
            <fileset dir="${basedir}" followsymlinks="false">
                <include name="**/*.php"/>
                <exclude name="tests/**/*"/> <!-- TODO Warum nicht für Testdateien? -->
                <modified />
            </fileset>
        </apply>
    </target>

    <target name="php-documentor">
        <exec executable="phpdoc" dir="${basedir}" logerror="on">
            <arg line="--title '${ant.project.name}'" />
            <arg line="-ue on" />
            <arg line="-t ${basedir}/build/api" />
            <arg line="-d modules" /> <!-- TODO library, tests ? -->
            <arg line="-tb '/home/opus4ci/pear/data/phpUnderControl/data/phpdoc'" /> <!-- TODO pfad -->
            <arg line="-o HTML:Phpuc:phpuc" />
        </exec>
    </target>

    <target name="php-codesniffer">
        <exec executable="phpcs" dir="${basedir}" 
              output="${basedir}/build/logs/checkstyle-ignored.xml" error="${basedir}/build/logs/checkstyle.error.log"> <!-- TODO log why to tmp? -->
            <arg line="--report=checkstyle" />
            <arg line="--standard=PEAR ." />
        </exec>
    </target>

    <target name="phpmd">
        <exec executable="phpmd" dir="${basedir}" logerror="on" output="${basedir}/build/logs/phpunit-pmd.xml" >
            <arg line="--exclude tests . xml codesize,unusedcode,naming,design" />
        </exec>
    </target>

    <target name="phpcpd">
        <exec executable="phpcpd" dir="${basedir}" logerror="on" >
            <arg line="--min-lines 3" />
            <arg line="--min-tokens 30" />
            <arg line="--log-pmd ${basedir}/build/logs/phpunit-cpd-details.xml" />
            <arg line="./library ./modules ./scripts ./import" />
        </exec>
    </target>

    <target name="pdepend" depends="phpunit" description="Generates software metrics charts.">
        <exec executable="pdepend" dir="${basedir}" logerror="on">
            <arg line="--coverage-report=${basedir}/build/logs/phpunit.coverage.xml" />
            <arg line="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
            <arg line="--jdepend-chart=${basedir}/build/pdepend/20-dependencies.svg" />
            <arg line="--overview-pyramid=${basedir}/build/pdepend/21-overview-pyramid.svg" />
            <arg line="--suffix=php,phtml" />
            <arg line="--coderank-mode=inheritance,property,method" />
            <arg line="--ignore=tests" />
            <arg line="${basedir}/library,${basedir}/modules,${basedir}/scripts,${basedir}/import" />
        </exec>
    </target>

    <target name="rebuild-database">
        <exec executable="./rebuilding_database.sh" dir="${basedir}/tests" failonerror="on" />
    </target>
    
    <target name="rebuild-index">
        <exec executable="php" dir="${basedir}/scripts" failonerror="on">
            <arg line="SolrIndexBuilder.php" />
        </exec>
    </target>
    
    <target name="phpunit" depends="rebuild-database,rebuild-index" description="Runs unit tests with coverage">
        <exec executable="phpunit" dir="${basedir}/tests" failonerror="true">
            <arg line="--log-junit ${basedir}/build/logs/phpunit.xml" />
            <arg line="--coverage-clover ${basedir}/build/logs/phpunit.coverage.xml" />
            <arg line="--coverage-html ${basedir}/build/coverage" />
            <arg line="--configuration phpunit.xml"/>
            <arg line="${testpath}" />
        </exec>
    </target>

    <target name="phpunit-fast" depends="rebuild-database,rebuild-index" description="Runs unit tests without coverage">
        <exec executable="phpunit" dir="${basedir}/tests" failonerror="on">
            <arg line="--log-junit ${basedir}/build/logs/phpunit.xml" />
            <arg line="--configuration phpunit.xml" />
            <arg line="${testpath}" />
        </exec>
    </target>

    <!-- TODO fix, setup in Jenkins -->
    <target name="watchdog_start">
        <exec executable="/home/opus4ci/cc-configs/php_error_log_watchdog.sh">
            <arg line=" buildStart"/>
        </exec>
    </target>

    <!-- TODO fix setup in Jenkins -->
    <target name="watchdog_stop">
        <exec executable="/home/opus4ci/cc-configs/php_error_log_watchdog.sh">
            <arg line=" buildStop"/>
        </exec>
    </target>

</project>