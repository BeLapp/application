<?php
/**
 * View to browse title information on filtered title lists
 *
 * This file is part of OPUS. The software OPUS has been originally developed
 * at the University of Stuttgart with funding from the German Research Net,
 * the Federal Department of Higher Education and Research and the Ministry
 * of Science, Research and the Arts of the State of Baden-Wuerttemberg.
 *
 * OPUS 4 is a complete rewrite of the original OPUS software and was developed
 * by the Stuttgart University Library, the Library Service Center
 * Baden-Wuerttemberg, the Cooperative Library Network Berlin-Brandenburg,
 * the Saarland University and State Library, the Saxon State Library -
 * Dresden State and University Library, the Bielefeld University Library and
 * the University Library of Hamburg University of Technology with funding from
 * the German Research Foundation and the European Regional Development Fund.
 *
 * LICENCE
 * OPUS is free software; you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the Licence, or any later version.
 * OPUS is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details. You should have received a copy of the GNU General Public License
 * along with OPUS; if not, write to the Free Software Foundation, Inc., 51
 * Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 *
 * @category    Application
 * @package     Module_Search
 * @author      Oliver Marahrens <o.marahrens@tu-harburg.de>
 * @copyright   Copyright (c) 2008, OPUS 4 development team
 * @license     http://www.gnu.org/licenses/gpl.html General Public License
 * @version     $Id$
 */
?>
<h1><?php echo $this->translate('search_titles_all'); ?></h1>

<?php /*
// Menu for sorting the titles
        $url_sort_by_id = array(
            'module' => 'search',
            'controller' => 'browsing',
            'action' => 'browseTitles',
            'sort_order' => 'id'
        );
        $url_sort_by_title = array(
            'module' => 'search',
            'controller' => 'browsing',
            'action' => 'browseTitles',
            'sort_order' => 'title'
        );
        $url_sort_by_author = array(
            'module' => 'search',
            'controller' => 'browsing',
            'action' => 'browseTitles',
            'sort_order' => 'author'
        );
        $url_sort_by_date = array(
            'module' => 'search',
            'controller' => 'browsing',
            'action' => 'browseTitles',
            'sort_order' => 'date'
        );
        $url_sort_asc = array(
            'sorting' => 'asc'
        );
        $url_sort_desc = array(
            'sorting' => 'desc'
        );
        $url_sort_by_id = $this->url($url_sort_by_id, 'default', false);
        $url_sort_by_title = $this->url($url_sort_by_title, 'default', false);
        $url_sort_by_author = $this->url($url_sort_by_author, 'default', false);
        $url_sort_by_date = $this->url($url_sort_by_date, 'default', false);
        $url_sort_asc = $this->url($url_sort_asc, 'default', false);
        $url_sort_desc = $this->url($url_sort_desc, 'default', false);
?>
<br/>
<?php echo $this->translate('docs_sortorder'); ?> <a href="<?php echo $url_sort_by_id ?>"><?php echo $this->translate('docs_by_id'); ?></a> <a href="<?php echo $url_sort_by_title ?>"><?php echo $this->translate('docs_by_title'); ?></a> <a href="<?php echo $url_sort_by_author ?>"><?php echo $this->translate('docs_by_author'); ?></a> <a href="<?php echo $url_sort_by_date ?>"><?php echo $this->translate('docs_by_date'); ?></a>
<a href="<?php echo $url_sort_asc ?>"><?php echo $this->translate('sort_ascending'); ?></a> <a href="<?php echo $url_sort_desc ?>"><?php echo $this->translate('sort_descending'); ?></a>
<br/>
<?php
$documentList = $this->documentList;
if (count($documentList) > 0) {
#if (false === empty($documentList)) {
    ?>
<p>
<?php
    echo $this->paginationControl($documentList, NULL, 'itemCount_pagination.phtml');
    echo $this->paginationControl($documentList, 'Sliding', 'results_pagination.phtml');
    echo $this->paginationControl($documentList, NULL, 'start_itemlist.phtml');
?>
    <?php
    foreach ($documentList as $docId) {
        $authors = array();
        unset($authors);
        $d = new Opus_Document($docId);
        try {
            $aut = $d->getPersonAuthor();
            foreach ($aut as $a) {
                $name = '';
                $lastName = '';
                $name = $a->getName();
                $lastName = $a->getLastName();
                if (false === empty($name)) {
                    $author = $a->getName();
                }
                else if (false === empty($lastName)) {
                    $autor = $a->getLastName();
                }
                else {
                    $author = " ";
                }
                $authors[] = $author;
            }
        }
        catch (Exception $e) {
            $authors[] = " ";
        }
        try {
            $docObject = $d->getTitleMain();
            $doc = '';
            if (is_array($docObject) === true && empty($docObject) === false) {
                $doc = array($docObject[0]->getValue());
            }
            else if (is_array($docObject) === false) {
                $doc = array($docObject->getValue());
            }
            if (true === empty($doc)) {
                $doc = array(0 => 'Opus document with id: ' . $docId);
            }
        }
        catch (Exception $e) {
            $doc = array(0 => 'Opus document with id: ' . $docId);
        }
        try {
            $docState = $d->getServerState();
        }
        catch (Exception $e) {
            // do nothing, document has no state!
        }
        $authorsstring = '';
        if (false === empty($authors)) {
            $authorsstring = join("; ", $authors) . ': ';
        }
        $title = array($authorsstring . $doc[0] . ' (' . $this->translate($d->getType()) . ')');

        $url_frontdoor = array(
            'module' => 'frontdoor',
            'controller' => 'index',
            'action' => 'index',
            'docId' => $docId
        );
        $url_frontdoor = $this->url($url_frontdoor, 'default', true);
    ?>
        <li>
        <?php echo '<a href="' . $url_frontdoor . '" target="_blank">' . current($title) . '</a>' ?>
        </li>
        <?php
    } ?>
</ol>
</p>
<?php
echo $this->paginationControl($documentList, 'Sliding', 'results_pagination.phtml');
} else { ?>
    <p><?php echo $this->translate('docs_nodocs'); ?></p>
<?php } */?>

<?php

// Sorting the titles
        $url_sort_by_id = array(
            'module' => 'search',
            'controller' => 'browsing',
            'action' => 'browseTitles',
            'sort_order' => 'id'
        );
        $url_sort_by_title = array(
            'module' => 'search',
            'controller' => 'browsing',
            'action' => 'browseTitles',
            'sort_order' => 'title'
        );
        $url_sort_by_author = array(
            'module' => 'search',
            'controller' => 'browsing',
            'action' => 'browseTitles',
            'sort_order' => 'p.last_name'
        );
        $url_sort_by_date = array(
            'module' => 'search',
            'controller' => 'browsing',
            'action' => 'browseTitles',
            'sort_order' => 'server_date_published'
        );
        $url_sort_asc = array(
            'sort_reverse' => '0'
        );
        $url_sort_desc = array(
            'sort_reverse' => '1'
        );
        $url_sort_by_id = $this->url($url_sort_by_id, 'default', false);
        $url_sort_by_title = $this->url($url_sort_by_title, 'default', false);
        $url_sort_by_author = $this->url($url_sort_by_author, 'default', false);
        $url_sort_by_date = $this->url($url_sort_by_date, 'default', false);
        $url_sort_asc = $this->url($url_sort_asc, 'default', false);
        $url_sort_desc = $this->url($url_sort_desc, 'default', false);
?>
<br/>
<ul class="navigation">
    <?php echo $this->translate('docs_sortorder'); ?>
    <li
    <?php
        if ($this->sort_order === 'id' || empty($this->sort_order) === true) {
            echo 'class="active"';
        }
    ?>
    ><a href="<?php echo $url_sort_by_id ?>"><?php echo $this->translate('docs_by_id'); ?></a></li>
    <li
    <?php
        if ($this->sort_order === 'title') {
            echo 'class="active"';
        }
    ?>
    ><a href="<?php echo $url_sort_by_title ?>"><?php echo $this->translate('docs_by_title'); ?></a></li>
    <li
    <?php
        if ($this->sort_order === 'p.last_name') {
            echo 'class="active"';
        }
    ?>
    ><a href="<?php echo $url_sort_by_author ?>"><?php echo $this->translate('docs_by_author'); ?></a></li>
    <li
    <?php
        if ($this->sort_order === 'date') {
            echo 'class="active"';
        }
    ?>
    ><a href="<?php echo $url_sort_by_date ?>"><?php echo $this->translate('docs_by_date'); ?></a></li>
    <li
    <?php
        if ($this->sort_reverse === '0' || $this->sort_reverse === false || empty($this->sort_reverse) === true) {
            echo 'class="active"';
        }
    ?>
     style="margin-left:30px;"><a href="<?php echo $url_sort_asc ?>"><?php echo $this->translate('sort_ascending'); ?></a></li>
    <li
    <?php
        if ($this->sort_reverse === '1' || $this->sort_reverse === true) {
            echo 'class="active"';
        }
    ?>
    ><a href="<?php echo $url_sort_desc ?>"><?php echo $this->translate('sort_descending'); ?></a></li>
</ul>
<?php
/*        $url_sort_by_id = array(
            'module' => 'search',
            'controller' => 'browsing',
            'action' => 'browseTitles',
            'sort_order' => 'id',
            'sort_reverse' => '1'
        );
        $url_sort_by_title = array(
            'module' => 'search',
            'controller' => 'browsing',
            'action' => 'browseTitles',
            'sort_order' => 'title',
            'sort_reverse' => '0'
        );
        $url_sort_by_date = array(
            'module' => 'search',
            'controller' => 'browsing',
            'action' => 'browseTitles',
            'sort_order' => 'date',
            'sort_reverse' => '1'
        );
        $url_sort_by_id = $this->url($url_sort_by_id, 'default', false);
        $url_sort_by_title = $this->url($url_sort_by_title, 'default', false);
        $url_sort_by_date = $this->url($url_sort_by_date, 'default', false);
echo '<br/>';
echo $this->translate('docs_sortorder'); ?>
 <a href="<?php echo $url_sort_by_id ?>"><?php echo $this->translate('docs_by_id'); ?></a>
 <a href="<?php echo $url_sort_by_title ?>"><?php echo $this->translate('docs_by_title'); ?></a>
 <a href="<?php echo $url_sort_by_date ?>"><?php echo $this->translate('docs_by_date'); ?></a>
<?php */

if (count($this->hitlist_paginator)) {
    echo $this->paginationControl($this->hitlist_paginator, NULL, 'searchList_ItemCount_pagination.phtml');
    echo $this->paginationControl($this->hitlist_paginator, 'Sliding', 'searchList_pagination.phtml');

    // FIXME: <ol start="..."> is not valid XHTML 1.0 Strict!
    // but it will return in (X)HTML 5 - so wontfix
    $pagerInfo = $this->hitlist_paginator->getPages();
    echo '<ol class="search" start="' . $pagerInfo->firstItemNumber . '">';
    echo "\n";

    $searchListItemCount = 0;
    foreach ($this->hitlist_paginator as $id) {
        $searchListItemCount++;
        $searchListOdd = ($searchListItemCount%2 === 1);

        $doc = new Opus_Search_SearchHit( (int) $id);
        $hit = $doc->getSearchHit();
        $document = $hit->getDocument();

        //print_r($document);
        $authoriterator = explode('; ', $document['author']);

        echo $searchListOdd ? '<li class="odd">' : '<li class="even">';
        $counter = 1;
        foreach ($authoriterator as $obj) {
           if (empty($obj) === true || $obj === ' ' || $obj === '') {
           	continue;
           }
             echo '<span class="author"><a href="' .
                 $this->url(
                     array(
                         'module'        => 'search',
                         'controller'    => 'search',
                         'action'        => 'metadatasearch',
                         'author'        => $obj
                     ),
                     null,
                      true
                 ) .
                 '">';

           echo $obj;
           echo "</a></span>";
           if ($counter === count($authoriterator)) echo ": ";
           else echo "; ";
           $counter++;
        }
        print('<span class="title"><a href="' . $this->url(array('module' => 'frontdoor',
            'controller' => 'index',
            'action' => 'index',
            'docId' => $document['id']),
            null, true
        ) . '">' . $document["title"] . "</a></span>");
        echo "</li>";

        #echo "<div>".$this->translate('search_titles_relevance').": ".$doc->getRelevance()."<br/>";
        #echo $document["abstract"]."<br/>";
        echo "\n";
    }

    echo "</ol>\n";

    echo $this->paginationControl($this->hitlist_paginator, 'Sliding', 'searchList_pagination.phtml');
}



/*
	echo "<ul>";
	$n = 0;
	foreach ($this->hitlist as $hit) {
		$document = $hit->getSearchHit();
		$data = $document->getDocument();
		$authoriterator = new Opus_Search_Iterator_PersonsListIterator($data["author"]);
		//print_r($document); # just to debug
		echo "<li>";
		#$doctype = $data["documentType"]->get();
		foreach ($authoriterator as $obj) {
			$pers = $obj->get();
			echo "<a href=".$this->url(array("controller"=>"browsing", "action"=>"browseTitles", "filter" => "author", "author"=>$pers["id"])).">";
			echo $pers["lastName"].", ".$pers["firstName"];
			echo "</a>";
			if ($authoriterator->hasNext() === true) echo "; ";
			else echo ": ";
		}
		echo "<a href=\"".$this->url($data["frontdoorUrl"])."\">";
		print($data["title"]);
		echo "</a>";
		#echo " (".$doctype["name"].")";
		echo "</li>";
	}
	echo "</ul>";
*/