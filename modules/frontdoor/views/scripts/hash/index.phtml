<?
/**
 *
 * This file is part of OPUS. The software OPUS has been originally developed
 * at the University of Stuttgart with funding from the German Research Net,
 * the Federal Department of Higher Education and Research and the Ministry
 * of Science, Research and the Arts of the State of Baden-Wuerttemberg.
 *
 * OPUS 4 is a complete rewrite of the original OPUS software and was developed
 * by the Stuttgart University Library, the Library Service Center
 * Baden-Wuerttemberg, the Cooperative Library Network Berlin-Brandenburg,
 * the Saarland University and State Library, the Saxon State Library -
 * Dresden State and University Library, the Bielefeld University Library and
 * the University Library of Hamburg University of Technology with funding from
 * the German Research Foundation and the European Regional Development Fund.
 *
 * LICENCE
 * OPUS is free software; you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the Licence, or any later version.
 * OPUS is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details. You should have received a copy of the GNU General Public License
 * along with OPUS; if not, write to the Free Software Foundation, Inc., 51
 * Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 *
 * @category    Application
 * @package     Module_Frontdoor
 * @author      Wolfgang Filter <wolfgang.filter@ub.un-stuttgart.de>
 * @copyright   Copyright (c) 2008, OPUS 4 development team
 * @license     http://www.gnu.org/licenses/gpl.html General Public License
 * @version     $Id:
 *
 *
 * This view displays the proofed hashes and signatures. It receives the arrays 'FileNames()'
 * and 'hashValueType()' from the controller.
 *
 */
?>
<h1><?= $this-> translate('frontdoor_pagetitle') ?></h1><hr /><br />
<h2><?= $this-> translate('frontdoor_hashtitle') ?></h2><?

if ($this->author !== null)
{?>
   <p><b><a href="<?= $this->value = $this->url(array(
                                'module' => 'search',
                                'controller' => 'search',
                                'action' => 'metadatasearch',
                                'author' => $this->author,
                            ), null, true);
                        ?>">
     <?= $this->author?></a>:&nbsp;<?= $this->title;?></b></p><?
}
else
{?>
   <p><b>&nbsp;<?= $this->title;?></b></p><br /><?
}?>
<p><?= $this-> translate('frontdoor_filenumber')?>:&nbsp;<?= $this->fileNumber?></p><br /><hr /><?
if ($this->doc = false )
{
    $this->filenumber == 0;
}

if ($this->fileNumber !== 0)
{
  if ($this->first_hash !== NULL)
  {
      for ($i = 0; $i < $this->fileNumber; $i++)
      {
         if (array_key_exists ($i, $this->fileNames) === true)
         {
            $file = $this->fileNames[$i];
            $hashes = $this->document->getFile($i)->getHashValue();
            $f = $this->document->getFile($i);
            $hashNumber = count($hashes);
            for ($j = 0; $j < $hashNumber; $j++)
            {
               if (array_key_exists ('hashType_' .$i. '_' .$j, $this->hashValueType) === true)
               {
                  $hashtype = $this->hashValueType['hashType_' .$i. '_' .$j];
                  $this->signtype = $signtype = substr($hashtype, 0,3);
                  if ($signtype == 'gpg')
                  {?>
                     <p><b><?= $this->translate('SignatureValue');?> (<?= $this->file = $file?>)</b></p>
                     <p><?= $this->signtype?>:<?//Hier ausgeben, ob SignaturprÃ¼fung erfolgreich war?></p><?
                  }
                  else
                  {
                     $value = $this->hashValueType['hashValue_' .$i. '_' .$j];?>
                     <p><b><?= $this->translate ('HashValue')?>&nbsp;(<?= $this->file = $file?>):</b></p>
                     <p><b>
                     <?= $this->hashtype = $hashtype?>&nbsp;</b>
                     <?= $this->translate('frontdoor_fixpoint')?>:&nbsp;
                     <?= $this->value = $value?></p>
                     <p><b>
                     <?= $this->hashtype = $hashtype?>&nbsp;</b>
                     <?= $this->translate('frontdoor_current')?>:&nbsp;

                     <?if ($f->canVerify() === true)
                       {?>
                         <?= $f->getRealHash($hashtype)?></p><?
                       }
                       else
                       {?>
                     	<?= $this->translate('frontdoor_file_too_big')?></p>
                     <?}
                   }
               }
               else
               {?>
                  <p><b><?= $this->translate('frontdoor_no_hash')?></b></p>
             <?}
            }?> <hr /><?
        }
     }
  }
  else
  {?>
      <p><?= $this->translate('frontdoor_no_hash');?></p><?
  }
}
else
{
    if ($this->doc == false)
    {?>
        <p><?= $this->translate('frontdoor_no_document');?></p><br /><?
    }
    else
    {?>
        <p><?= $this->translate('frontdoor_no_file');?></p><br /><?
    }
}?>
<p><br /><br /><?= $this->docpath?></p><br />

<br /><p><a href="<?= $this->value =
   $this->url(array(
   'module' => 'frontdoor',
   'controller' => 'index',
   'docId' => $this->docId,
   ), null, true);?>"><?= $this->translate('frontdoor_back')?></a></p><br />
