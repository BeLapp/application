<?php
/**
 * This file is part of OPUS. The software OPUS has been originally developed
 * at the University of Stuttgart with funding from the German Research Net,
 * the Federal Department of Higher Education and Research and the Ministry
 * of Science, Research and the Arts of the State of Baden-Wuerttemberg.
 *
 * OPUS 4 is a complete rewrite of the original OPUS software and was developed
 * by the Stuttgart University Library, the Library Service Center
 * Baden-Wuerttemberg, the North Rhine-Westphalian Library Service Center,
 * the Cooperative Library Network Berlin-Brandenburg, the Saarland University
 * and State Library, the Saxon State Library - Dresden State and University
 * Library, the Bielefeld University Library and the University Library of
 * Hamburg University of Technology with funding from the German Research
 * Foundation and the European Regional Development Fund.
 *
 * LICENCE
 * OPUS is free software; you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the Licence, or any later version.
 * OPUS is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details. You should have received a copy of the GNU General Public License 
 * along with OPUS; if not, write to the Free Software Foundation, Inc., 51 
 * Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 *
 * @category    Application
 * @package     Module_CollectionRole
 * @author      Felix Ostrowski <ostrowski@hbz-nrw.de>
 * @author      Tobias Tappe <tobias.tappe@uni-bielefeld.de>
 * @copyright   Copyright (c) 2008, OPUS 4 development team
 * @license     http://www.gnu.org/licenses/gpl.html General Public License
 * @version     $Id$
 */
?>
<?php
    /**
     * Displays a collections as nested lists.
     *
     * @param  array  $collection
     * @return string
     */
    function recurseCollection(array $collection, $view, $collection_id = 0) {
        $result = '<ul>' . "\n" .
                ' <li>' . "\n" .
                ' &nbsp;&nbsp;&nbsp;<a href="' . $view->url(array('controller'=>'collection', 'action' => 'new', 'parent' => $collection_id, 'left_sibling' => 0, 'role' => $view->role)) . '">&lt;&lt;&lt; Add here</a>' . "\n" .
        ' </li>' . "\n"
        ;
        foreach ($collection as $subCollection) {
            $result .=
                ' <li>' . 
                $subCollection['Name'] . '<form action="/admin/collection/delete/role/' . $view->role . '" class="crud" method="post">'. "\n" .
                '  <a href="' . $view->url(array('controller'=>'collection', 'action' => 'edit', 'id' => $subCollection['Id'], 'role' => $view->role)) . '">Edit</a>'. "\n" .
                '   <input type="hidden" name="id" value="' . $subCollection['Id'] . '" />'. "\n" .
                '   <button type="submit">Delete</button>'. "\n" .
                '  </form>'. "\n" .
                ' </li>'. "\n" //.
                ;
            if (empty($subCollection['SubCollection']) === false) {
                $result .= ' <li>' . "\n" .
                            recurseCollection($subCollection['SubCollection'], $view, $subCollection['Id']) .
                           ' </li>' . "\n"
                ;
            }
            $result .= ' <li>' . "\n" .
                    '  &nbsp;&nbsp;&nbsp;<a href="' . $view->url(array('controller'=>'collection', 'action' => 'new', 'parent' => $collection_id, 'left_sibling' => $subCollection['Id'], 'role' => $view->role)) . '">&lt;&lt;&lt; Add here</a></li>' . "\n"
                    ;
        }
        $result .= '</ul>' . "\n";
        return $result;
    }
?>
<h1>Opus Application - <?= $this->title ?></h1>
<?= recurseCollection($this->entry, $this); ?>
