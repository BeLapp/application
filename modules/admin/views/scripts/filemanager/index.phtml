<?php
/**
 * Indexview for actions with public keys and signature verification
 *
 * This file is part of OPUS. The software OPUS has been originally developed
 * at the University of Stuttgart with funding from the German Research Net,
 * the Federal Department of Higher Education and Research and the Ministry
 * of Science, Research and the Arts of the State of Baden-Wuerttemberg.
 *
 * OPUS 4 is a complete rewrite of the original OPUS software and was developed
 * by the Stuttgart University Library, the Library Service Center
 * Baden-Wuerttemberg, the Cooperative Library Network Berlin-Brandenburg,
 * the Saarland University and State Library, the Saxon State Library -
 * Dresden State and University Library, the Bielefeld University Library and
 * the University Library of Hamburg University of Technology with funding from
 * the German Research Foundation and the European Regional Development Fund.
 *
 * LICENCE
 * OPUS is free software; you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the Licence, or any later version.
 * OPUS is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details. You should have received a copy of the GNU General Public License
 * along with OPUS; if not, write to the Free Software Foundation, Inc., 51
 * Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 *
 * @category    Application
 * @package     Module_Admin
 * @author      Oliver Marahrens <o.marahrens@tu-harburg.de>
 * @copyright   Copyright (c) 2009, OPUS 4 development team
 * @license     http://www.gnu.org/licenses/gpl.html General Public License
 * @version     $Id$
 */
?>
<h1><?= $this->title ?></h1>
<a href="<?= $this->url(array('module' => 'admin', 'controller' => 'documents', 'action' => 'edit', 'id' => $this->docId), null, true); ?>"><?= $this->translate('admin_documents_edit'); ?></a>
<?= $this->uploadform ?>
<?= $this->actionresult ?>
<?php
    if ($this->noFileSelected === true)
    {
    	echo $this->translate('pkm_no_publication_selected');
    }
    else if (empty($this->noFileSelected) === false) {
        echo $this->noFileSelected;
    } else {
        ?>
        <ol>
        <?
for ($fi = 0; $fi < $this->fileNumber; $fi++) {
      $file = $this->fileNames[$fi];
      $hashNumber = $this->hashNumber[$fi];
      $show_gpg = false;
      for ($hi = 0; $hi < $hashNumber; $hi++) {
          $hashtype = $this->hashType[$fi][$hi];
          if (true === isset($hashtype)) {
            $this->signtype = $signtype = substr($hashtype, 0, 3);
            if ($signtype == 'gpg') {
              if ($show_gpg === false) {
              // Show GPG-Signatures only once
               $show_gpg = true;
               ?>
               <p><b><?= $this->translate('SignatureValue');?> (<?= $this->file = $file?>)</b></p>
               <p><?= $this->signtype?>:
               <?php
               // Controller stores signature verification results in $this->verifyResult[$file]
               $verification = $this->verifyResult[$file];
               if (count($verification) === 0) {
                   ?>
                   <?= $this->translate('pkm_no_signature') ?>
                   <?php
               }
               $sigindex = 0;
               foreach($verification as $verifiedArray) {
                   foreach($verifiedArray as $index => $verificationResult) {
                       if ($index === 'result') {
                          foreach ($verificationResult as $verified) {
                              if (false === is_object($verified)) {
                                  ?><?= $verified ?><br/>
                              <?}
                              else if ($verified->isValid() === true) {
                                  printf($this->translate('pkm_sigcheck_valid'), $verified->getUserId()->getName());
                                  echo "<br/>";
                                  } else {
                                     printf($this->translate('pkm_sigcheck_invalid'), $verified->getUserId()->getName());
                                     echo "<br/>";
                                  }
                              // Show key used for signature
                              if (true === is_object($verified)) {
                                 ?>
                                 <a href="<?= $this->url(array('module' => 'pkm', 'controller' => 'index', 'action' => 'showkey', 'fingerprint' => $verified->getKeyFingerprint()), null, true) ?>"><?= $this->translate('pkm_show_signature_key') ?></a><br/>
                                 <?
                              }
                          }
                       } else {
                          $signaturelist->signatures[$sigindex] = $verificationResult;
                          ?>
                          <a href="<?= $this->url(array('module' => 'pkm', 'controller' => 'index', 'action' => 'showsignature', 'signature' => $sigindex), null, true) ?>"><?= $this->translate('pkm_show_signature') ?></a><br/>
                          <?
                          $sigindex++;
                       }
                  }
              }
              ?>
             </p><?
              }
            } else {
               ?><br>
               <p><b><?= $this->translate ('HashValue')?>&nbsp;(<?= $this->file = $file?>):</b></p>
               <p><b>
               <?= $hashtype?>&nbsp;</b>
               <?= $this->translate('frontdoor_fixpoint')?>:&nbsp;
               <?= $this->hashSoll[$fi][$hi]?></p>
               <p><b>
               <?= $this->hashtype = $hashtype?>&nbsp;</b>
               <?= $this->translate('frontdoor_current')?>:&nbsp;
               <?
               if ($this->hashIst[$fi][$hi] != 0) {
                   ?><?= $this->hashIst[$fi][$hi]?></p><?
               } else {
                    ?><?= $this->translate('frontdoor_file_too_big')?></p>
                    <?
               }
             }
         } else {
            ?><p><b><?= $this->translate('frontdoor_no_hash')?></b></p>
            <?
         }
      }
      if (isset($this->fileForm[$fi]) === true) {
          echo $this->fileForm[$fi];
      }
      echo "<hr/>";
}
}
?>
        </ol>