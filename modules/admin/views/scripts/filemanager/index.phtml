<?php
/**
 * Indexview for actions with public keys and signature verification
 *
 * This file is part of OPUS. The software OPUS has been originally developed
 * at the University of Stuttgart with funding from the German Research Net,
 * the Federal Department of Higher Education and Research and the Ministry
 * of Science, Research and the Arts of the State of Baden-Wuerttemberg.
 *
 * OPUS 4 is a complete rewrite of the original OPUS software and was developed
 * by the Stuttgart University Library, the Library Service Center
 * Baden-Wuerttemberg, the Cooperative Library Network Berlin-Brandenburg,
 * the Saarland University and State Library, the Saxon State Library -
 * Dresden State and University Library, the Bielefeld University Library and
 * the University Library of Hamburg University of Technology with funding from
 * the German Research Foundation and the European Regional Development Fund.
 *
 * LICENCE
 * OPUS is free software; you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the Licence, or any later version.
 * OPUS is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details. You should have received a copy of the GNU General Public License
 * along with OPUS; if not, write to the Free Software Foundation, Inc., 51
 * Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 *
 * @category    Application
 * @package     Module_Admin
 * @author      Oliver Marahrens <o.marahrens@tu-harburg.de>
 * @author      Jens Schwidder <schwidder@zib.de>
 * @copyright   Copyright (c) 2009, OPUS 4 development team
 * @license     http://www.gnu.org/licenses/gpl.html General Public License
 * @version     $Id$
 */
?>

<div class="adminContainer">

    <div class="breadcrumbsContainer">
        <?= $this->navigation()->breadcrumbs()
                 ->setMaxDepth(1)
                 ->setMinDepth(0)
                 ->setLinkLast(true) ?>
        &gt;
        <a href="<?= $this->documentUrl()->adminShow($this->docId) ?>"><?= $this->translate('admin_document_index') ?> (<?= htmlspecialchars($this->docId) ?>)</a>
        &gt;
        <?= $this->translate('admin_filemanager_index') ?>
    </div>

<div style="padding: 1em; margin-left: 2em">
    <div>
        <span class="label"><?= $this->translate('DocumentId') ?></span>
        <span class="value"><?= htmlspecialchars($this->docId) ?></span>
    </div>
    <div>
        <span class="label"><?= $this->translate('TitleMain') ?></span>
        <span class="value"><?= htmlspecialchars($this->document->getDocTitle()) ?></span>
    </div>
</div>

    <div class="actions" style="font-size: larger; text-align: center; padding: 0.5em">
        <a href="<?=$this->importUrl?>"><?=$this->translate('admin_filemanager_import_link')?></a>
    </div>

<div id="upload-form">
<?= $this->uploadform ?>
</div>

<?= $this->actionresult ?>

<div id="file-list">
<?PHP foreach ($this->fileHelpers as $file) : ?>
    <?PHP
        $fileName = htmlspecialchars($file->getFileName());
    ?>
    <fieldset class="file">
    <legend class="filename"><a href="<?= $file->getUrl($this) ?>"><?= $fileName ?></a></legend>

    <table width="100%">
        <tr>
          <td class="label"><?= $this->translate('admin_filemanager_label_filesize') ?></td>
          <td class="value"><?= $file->getSize() ?></td>
        </tr>
    </table>

    <?PHP if ($file->exists()) : ?>
    <div class="file-actions">
        <a href="<?= $this->url(array('module' => 'admin', 'controller' => 'filemanager', 'action' => 'delete', 'fileId' => $file->getId()), null, false) ?>"
           ><?= $this->translate('admin_filemanager_delete') ?></a>
    </div>

    <?PHP foreach ($file->getHashes() as $hash) : ?>
        <?PHP $hashType = $hash->getHashType(); ?>
        <?PHP if (!empty($hashType)) : ?>
            <?PHP $signtype = $hash->getSignatureType(); ?>
            <?PHP if($signtype != 'gpg') : ?>
                <div><?= $this->translate('HashValue')?> - <?= $hash->getHashType() ?></div>
                <div>
                    <span class="label"><?= $this->translate('frontdoor_fixpoint')?>:</span>
                    <span class="value"><?= $hash->getSoll()?></span>
                </div>
                <div>
                    <span class="label"><?= $this->translate('frontdoor_current')?>:</span>
                    <span class="value" style="white-space: normal">
                    <?PHP if (!$hash->checkFileExists()) : ?>
                        <?= $this->translate('admin_filemanager_file_does_not_exist') ?>
                    <?PHP elseif (!$hash->checkFilePermission()) : ?>
                        <?= $this->translate('admin_filemanager_file_permission_denied')?>
                    <?PHP elseif (!$hash->canVerify()) : ?>
                        <?= $this->translate('frontdoor_file_too_big')?>
                    <?PHP else : ?>
                        <? $real_hash_value = $hash->getIst() ?>
                        <? $real_hash_value != NULL ? $real_hash_value : 'null' ?>
                    <?PHP endif; ?>
                    </span>
                </div>
            <?PHP endif; ?>
        <?PHP else : ?>
            <div><b><?= $this->translate('frontdoor_no_hash')?></b></div>
        <?PHP endif; ?>
    <?PHP endforeach; ?>
    <?PHP foreach ($file->getForms() as $fileForm) : ?>
        <?= $fileForm ?>
    <?PHP endforeach; ?>

    <?PHP else : ?>
           <b><?= $this->translate('admin_filemanager_file_does_not_exist') ?></b>
    <?PHP endif; ?>

    </fieldset>
<?PHP endforeach; ?>
</div>

</div>
