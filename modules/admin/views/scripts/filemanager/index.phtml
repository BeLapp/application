<?php
/**
 * Indexview for actions with public keys and signature verification
 *
 * This file is part of OPUS. The software OPUS has been originally developed
 * at the University of Stuttgart with funding from the German Research Net,
 * the Federal Department of Higher Education and Research and the Ministry
 * of Science, Research and the Arts of the State of Baden-Wuerttemberg.
 *
 * OPUS 4 is a complete rewrite of the original OPUS software and was developed
 * by the Stuttgart University Library, the Library Service Center
 * Baden-Wuerttemberg, the Cooperative Library Network Berlin-Brandenburg,
 * the Saarland University and State Library, the Saxon State Library -
 * Dresden State and University Library, the Bielefeld University Library and
 * the University Library of Hamburg University of Technology with funding from
 * the German Research Foundation and the European Regional Development Fund.
 *
 * LICENCE
 * OPUS is free software; you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the Licence, or any later version.
 * OPUS is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details. You should have received a copy of the GNU General Public License
 * along with OPUS; if not, write to the Free Software Foundation, Inc., 51
 * Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 *
 * @category    Application
 * @package     Module_Admin
 * @author      Oliver Marahrens <o.marahrens@tu-harburg.de>
 * @copyright   Copyright (c) 2009, OPUS 4 development team
 * @license     http://www.gnu.org/licenses/gpl.html General Public License
 * @version     $Id: listfiles.phtml 2299 2009-03-27 16:58:18Z marahrens $
 */
?>
<h1><?= $this->title ?></h1>
<a href="<?= $this->url(array('module' => 'admin', 'controller' => 'documents', 'action' => 'edit', 'id' => $this->docId), null, true); ?>"><?= $this->translate('admin_documents_edit'); ?></a>
<?= $this->uploadform ?>
<?= $this->actionresult ?>
<?php
    if ($this->noFileSelected === true)
    {
    	echo $this->translate('pkm_no_publication_selected');
    }
    else {
        ?>
        <ol>
            <?php
            // files includes a multidimensional array of files and signature forms
            foreach ($this->files as $file) {
                echo '<li>' . $file['path'];
            ?>
                <?php
                // verifyResult includes a multidimensional array of verification results for this file
                foreach ($this->verifyResult as $f => $verification)
                {
                    // check if the result is from the current one from the file-array
                    if ($f === $file['path']) {
                ?>
                <ul>
                    <?php
                    // One file can have more than one signature, so check first, if there is at least one
                    if (count($verification) === 0)
                    {
                    ?>
                        <li class="invalid">
                        <?= $this->translate('pkm_no_signature') ?>
                    <?php
                    }
                    // if there is at least one signature, show verification result
                    foreach($verification as $verifiedArray)
                    {
                        // the result is also stored in an array!
                        foreach($verifiedArray as $verified)
                        {
                            // if the result is not an object, its cannot be a valid signature
                            if (false === is_object($verified))
                            {
                    ?>
                                <li class="invalid">
                                    <?= $verified ?>
                    <?php
                            }
                            // if it is a object, it can be validated
                            else if ($verified->isValid() === true)
                            {
                    ?>
                                <li class="valid">
                        <?php
                            printf($this->translate('pkm_sigcheck_valid'), $verified->getUserId()->getName());
                        ?>
                        <?php
                            }
                            else
                            {
                        ?>
                                 <li class="invalid">
                        <?php
                            printf($this->translate('pkm_sigcheck_invalid'), $verified->getUserId()->getName());
                        ?>
                    <?php
                            }
                            // Show key used for signature
                            if (true === is_object($verified))
                            {
                    ?>
                                <a href="<?= $this->url(array('module' => 'pkm', 'controller' => 'index', 'action' => 'showkey', 'fingerprint' => $verified->getKeyFingerprint())) ?>"><?= $this->translate('pkm_show_signature_key') ?></a>
                    <?php
                            }
                    ?>
                        </li>
                <?php
                        } // end of array with signature verification results
                    } // end of array with signature objects
                    } // end of check, if the file is the one in the signature array
                } // end of array with signatures
                // Show hash values for this file
                $hashes = $file['object']->getHashValue();
                foreach ($hashes as $hash) {
                    // Dont show signatures
                    if (substr($hash->getType(), 0, 3) !== 'gpg') {
                        echo '<li>' . $this->translate('admin_filemanager_checksum') . ' ' . $hash->getType() . ': ' . $hash->getValue() . '</li>';
                    }
                } // end of array with hash values
                ?>
                </ul>
                <?php
                // Show form for building the signature
                echo $file['form'];
        ?>
            </li>
        <?php
        } // end of array with all files associated with this document
        ?>
        </ol>
        <?php
    } // end of else clause when there are files associated with this document
?>